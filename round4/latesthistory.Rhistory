TitanicData <- read.csv(file="http://www.personal.psu.edu/dlp/w540/datasets/titanicsurvival.csv", header=TRUE, sep=",")
View(TitanicData)
nrow(TitanicData)
sample(nrow(TitanicData))
x = TitanicData[sample(nrow(TitanicData)),]
View(X)
View(x)
xx = x[sample(nrow(TitanicData)),]
xxx = xx[sample(nrow(TitanicData)),]
train = xxx[1:1101,]
test = xxx[1102:2201,]
View(train)
View(test)
View(x)
sapply(TitanicData, function(x) sum(is.na(x)))
sapply(TitanicData, function(x) length(unique(x)))
is.factor(test$Class)
is.factor(TitanicData$Class)
is.factor(TitanicData$Age)
TDf = f(TitanicData)
TDf = factor(TitanicData)
TDf$Class = factor(TitanicData$Class)
tempc = factor(TitanicData$Class)
tempa = factor(TitanicData$Age)
temps1 = factor(TitanicData$Sex)
temps2 = factor(TitanicData$Survive)
TDf = data.frame(tempc, tempa, temps1, temps2)
View(TDf)
is.factor(TDf$Sex)
is.factor(tempa)
contrasts(tempa)
contrasts(tempc)
contrasts(temps1)
contrasts(temps2)
TitanicData <- read.csv(file="http://www.personal.psu.edu/dlp/w540/datasets/titanicsurvival.csv", header=TRUE, sep=",", colClasses = c("factor","factor","factor","factor"))
is.factor(TitanicData$Sex)
x = TitanicData[sample(nrow(TitanicData)),]
xx = x[sample(nrow(TitanicData)),]
xxx = xx[sample(nrow(TitanicData)),]
train = xxx[1:1101,]
test = xxx[1102:2201,]
is.factor(test$Sex)
is.factor(test$Age)
View(TDf)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
model <- glm(Survive ~.,family=binomial(link='logit'),data=train)
model
anova(model, test="Chisq")
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survived)
print(paste('Accuracy',1-misClasificError))
fitted.results <- predict(model,newdata=subset(test,select=c(0,1,2)),type='response')
fitted.results <- predict(model,newdata=subset(test,select=c(0,1,2)),type='response')
fitted.results <- predict(model,newdata=subset(test,select=c(0,1)),type='response')
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survive)
print(paste('Accuracy',1-misClasificError))
model <- glm(Survived ~Age,family=binomial(link='logit'),data=train)
model <- glm(Survive~Age,family=binomial(link='logit'),data=train)
anova(model, test="Chisq")
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survive)
print(paste('Accuracy',1-misClasificError))
model <- glm(Survive ~Class,family=binomial(link='logit'),data=train)
anova(model, test="Chisq")
fitted.results <- predict(model,newdata=test,type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test$Survive)
print(paste('Accuracy',1-misClasificError))
install.packages("caret")
testPred <- predict(fitted.results, test)
testPred <- predict(model, test)
postResample(testPred, test$Class)
library("caret", lib.loc="~/R/win-library/3.3")
postResample(testPred, test$Class)
install.packages("e1071", dep = TRUE, type = "source")
postResample(testPred, test$Class)
sensitivity(testPred, test$Age)
sensitivity(testPred, tempa)
confusionMatrix(testPred, test$Age)
savehistory(file = "assgn 3-4/.Rhistory")
getwd()
setwd('../..')
setwd('./dataGirls/round4/')
data <- read.csv(file = 'values.csv')
View(data)
data <- read.csv(file = 'values.csv')
my.objects <- sort(unique(c(as.character(daat$repo1), as.character(data$repo2))))
my.objects <- sort(unique(c(as.character(data$repo1), as.character(data$repo2))))
data$repo1 <- match(data$repo1, my.objects)
data$repo2 <- match(data$repo2, my.objects)
n <- length(my.objects)
dist.mat <- matrix(NA, n, n)
i <- as.matrix(data[-3])
dist.mat[i] <- dist.mat[i[,2:1]] <- df$V3
dist.mat[i] <- dist.mat[i[,2:1]] <- data$value
View(dist.mat)
max(dist.mat)
max(dist.mat[,])
min(dist.mat[,])
which.max(dist.mat)
max(dist.mat)
max(dist.mat[11240052,])
max(dist.mat[,11240052])
View(dist.mat)
Integer.max
Integer.Max
integer.Max
.Machine$integer.max
integer.max
dist.mat = 1 - dist.mat
dist.mat[is.na(dist.mat)] = 1
View(dist.mat)
max(dist.mat)
min(dist.mat)
clusters <- kmeans(dist.mat, 10)
dist.mat = 1 - dist.mat
dist.mat = 1 - dist.mat
dist.mat = 1 - dist.mat
View(dist.mat)
data <- read.csv(file = 'values.csv')
my.objects <- sort(unique(c(as.character(daat$repo1), as.character(data$repo2))))
my.objects <- sort(unique(c(as.character(data$repo1), as.character(data$repo2))))
data$repo1 <- match(data$repo1, my.objects)
data$repo2 <- match(data$repo2, my.objects)
View(data)
View(data)
n <- length(my.objects)
dist.mat <- matrix(NA, n, n)
i <- as.matrix(data[-3])
dist.mat[i] <- dist.mat[i[,2:1]] <- df$V3
dist.mat[i] <- dist.mat[i[,2:1]] <- data$value
View(dist.mat[1:10,1:10])
dist.mat[is.na(dist.mat)] = 1
View(dist.mat[1:10,1:10])
diag(dist.mat) = 0
View(dist.mat[1:10,1:10])
import(clusters)
library(cluster)
pam(dist.mat, 10, diss = TRUE)
savehistory("D:/dataGirls/round4/newhistory.Rhistory")
cluster <- pam(dist.mat, 10, diss = TRUE)
View(cluster)
results <- data.frame(my.objects, cluster)
results <- data.frame(my.objects, cluster$clustering)
View(results)
View(results[,results$cluster.clustering = 1])
View(results[,results$cluster.clustering == 1])
View(results[results$cluster.clustering == 1,])
View(results[results$cluster.clustering == 2,])
View(results[results$cluster.clustering == 3,])
View(results[results$cluster.clustering == 4,])
count(results[results$cluster.clustering == 4,])
nrow(results[results$cluster.clustering == 4,])
hist(results[,1], results[,2])
hist(results[,2])
nrow(results[results$cluster.clustering == 1,])
View(results[results$cluster.clustering == 5,])
max(results[,2])
cluster2 <- kmeans(dist.mat, 10)
results2 <- data.frame(my.objects, cluster2$cluster)
View(results2)
View(results2[results2$cluster.cluster == 1,])
View(results2[results2$cluster.cluster == 2,])
View(results2[results2$cluster2.cluster == 1,])
hist(results[,2])
hist(results2[,2])
hist(results[,2])
hist(results2[,2])
View(results2[results2$cluster2.cluster == 3,])
View(results2[results2$cluster2.cluster == 6,])
View(results2[results2$cluster2.cluster == 8,])
View(results2[results2$cluster2.cluster == 8,])
View(results2[results2$cluster2.cluster == 3,])
View(results2[results2$cluster2.cluster == 3,])
View(results2[results2$cluster2.cluster == 2,])
View(results2[results2$cluster2.cluster == 4,])
View(results2[results2$cluster2.cluster == 8,])
View(results2[results2$cluster2.cluster == 5,])
View(results2[results2$cluster2.cluster ==7,])
View(results2[results2$cluster2.cluster ==9,])
View(results2[results2$cluster2.cluster ==10,])
nrow(results2[results2$cluster2.cluster ==10,])
nrow(results2[results2$cluster2.cluster ==5,])
View(results2[results2$cluster2.cluster ==5,])
savehistory("D:/dataGirls/round4/latesthistory.Rhistory")
